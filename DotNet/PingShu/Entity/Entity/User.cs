/*
insert license info here
*/
using System;
using System.Collections;
using System.Collections.Generic;
using System.Text;

namespace PingShu.Entity
{
	/// <summary>
	///	Generated by MyGeneration using the NHibernate Object Mapping template
	/// </summary>
	[Serializable]
	public sealed  class User
	{

		#region Private Members
		private bool _isChanged;

		private int _user_id; 
		private string _user_type; 
		private string _user_name; 
		private string _user_mark; 
		private int _last_story_id; 
		private int _last_story_minute; 
		private string _user_ext; 
		private string _collectible; 
		private string _history; 		
		#endregion

		#region Default ( Empty ) Class Constuctor
		/// <summary>
		/// </summary>
		public User()
		{
			_user_id = 0; 
			_user_type = String.Empty; 
			_user_name = String.Empty; 
			_user_mark = String.Empty; 
			_last_story_id = 0; 
			_last_story_minute = 0; 
			_user_ext = String.Empty; 
			_collectible = String.Empty; 
			_history = String.Empty; 
		}
		#endregion // End of Default ( Empty ) Class Constuctor


		#region Public Properties
			
		/// <summary>
		/// 
		/// </summary>
		public int UserId
		{
			get { return _user_id; }
			set
			{
				_isChanged |= ( _user_id != value ); 
				_user_id = value;
			}

		}
			
		/// <summary>
		/// 
		/// </summary>
		public string UserType
		{
			get { return _user_type; }

			set	
			{	
				if(  value != null &&  value.Length > 100)
					throw new ArgumentOutOfRangeException("Invalid value for UserType", value, value.ToString());
				
				_isChanged |= (_user_type != value); _user_type = value;
			}
		}
			
		/// <summary>
		/// 
		/// </summary>
		public string UserName
		{
			get { return _user_name; }

			set	
			{	
				if(  value != null &&  value.Length > 100)
					throw new ArgumentOutOfRangeException("Invalid value for UserName", value, value.ToString());
				
				_isChanged |= (_user_name != value); _user_name = value;
			}
		}
			
		/// <summary>
		/// 
		/// </summary>
		public string UserMark
		{
			get { return _user_mark; }

			set	
			{	
				if(  value != null &&  value.Length > 100)
					throw new ArgumentOutOfRangeException("Invalid value for UserMark", value, value.ToString());
				
				_isChanged |= (_user_mark != value); _user_mark = value;
			}
		}
			
		/// <summary>
		/// 
		/// </summary>
		public int LastStoryId
		{
			get { return _last_story_id; }
			set
			{
				_isChanged |= ( _last_story_id != value ); 
				_last_story_id = value;
			}

		}
			
		/// <summary>
		/// 
		/// </summary>
		public int LastStoryMinute
		{
			get { return _last_story_minute; }
			set
			{
				_isChanged |= ( _last_story_minute != value ); 
				_last_story_minute = value;
			}

		}
			
		/// <summary>
		/// 
		/// </summary>
		public string UserExt
		{
			get { return _user_ext; }

			set	
			{	
				if(  value != null &&  value.Length > 1073741823)
					throw new ArgumentOutOfRangeException("Invalid value for UserExt", value, value.ToString());
				
				_isChanged |= (_user_ext != value); _user_ext = value;
			}
		}
			
		/// <summary>
		/// 
		/// </summary>
		public string Collectible
		{
			get { return _collectible; }

			set	
			{	
				if(  value != null &&  value.Length > 500)
					throw new ArgumentOutOfRangeException("Invalid value for Collectible", value, value.ToString());
				
				_isChanged |= (_collectible != value); _collectible = value;
			}
		}
			
		/// <summary>
		/// 
		/// </summary>
		public string History
		{
			get { return _history; }

			set	
			{	
				if(  value != null &&  value.Length > 500)
					throw new ArgumentOutOfRangeException("Invalid value for History", value, value.ToString());
				
				_isChanged |= (_history != value); _history = value;
			}
		}
			
		/// <summary>
		/// Returns whether or not the object has changed it's values.
		/// </summary>
		public  bool IsChanged
		{
			get { return _isChanged; }
		}
				
		#endregion 
	}
}
