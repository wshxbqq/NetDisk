/*
insert license info here
*/
using System;
using System.Collections;
using System.Collections.Generic;
using System.Text;

namespace PingShu.Entity
{
	/// <summary>
	///	Generated by MyGeneration using the NHibernate Object Mapping template
	/// </summary>
	[Serializable]
	public sealed  class Book
	{

		#region Private Members
		private bool _isChanged;

		private int _book_id; 
		private IList<Story> _StoryList; 
		private Artist _artist_id; 
		private string _book_name; 
		private string _book_ico; 
		private string _book_details; 
		private int _book_read_count; 		
		#endregion

		#region Default ( Empty ) Class Constuctor
		/// <summary>
		/// </summary>
		public Book()
		{
			_book_id = 0; 
			_StoryList = new List<Story>();
			_artist_id = new Artist(); 
			_book_name = String.Empty; 
			_book_ico = String.Empty; 
			_book_details = String.Empty; 
			_book_read_count = 0; 
		}
		#endregion // End of Default ( Empty ) Class Constuctor


		#region Public Properties
			
		/// <summary>
		/// 
		/// </summary>
		public int BookId
		{
			get { return _book_id; }
			set
			{
				_isChanged |= ( _book_id != value ); 
				_book_id = value;
			}

		}
			
		public IList<Story> StoryList
		{
			get
			{
				return _StoryList;
			}
			set
			{
				_StoryList = value;
			}
		}

		/// <summary>
		/// 
		/// </summary>
		public Artist ArtistId
		{
			get { return _artist_id; }
			set
			{
				_isChanged |= ( _artist_id != value ); 
				_artist_id = value;
			}

		}
			
		/// <summary>
		/// 
		/// </summary>
		public string BookName
		{
			get { return _book_name; }

			set	
			{	
				if(  value != null &&  value.Length > 100)
					throw new ArgumentOutOfRangeException("Invalid value for BookName", value, value.ToString());
				
				_isChanged |= (_book_name != value); _book_name = value;
			}
		}
			
		/// <summary>
		/// 
		/// </summary>
		public string BookIco
		{
			get { return _book_ico; }

			set	
			{	
				if(  value != null &&  value.Length > 100)
					throw new ArgumentOutOfRangeException("Invalid value for BookIco", value, value.ToString());
				
				_isChanged |= (_book_ico != value); _book_ico = value;
			}
		}
			
		/// <summary>
		/// 
		/// </summary>
		public string BookDetails
		{
			get { return _book_details; }

			set	
			{	
				if(  value != null &&  value.Length > 500)
					throw new ArgumentOutOfRangeException("Invalid value for BookDetails", value, value.ToString());
				
				_isChanged |= (_book_details != value); _book_details = value;
			}
		}
			
		/// <summary>
		/// 
		/// </summary>
		public int BookReadCount
		{
			get { return _book_read_count; }
			set
			{
				_isChanged |= ( _book_read_count != value ); 
				_book_read_count = value;
			}

		}
			
		/// <summary>
		/// Returns whether or not the object has changed it's values.
		/// </summary>
		public  bool IsChanged
		{
			get { return _isChanged; }
		}
				
		#endregion 
	}
}
