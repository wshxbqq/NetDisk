/*
insert license info here
*/
using System;
using System.Collections;
using System.Collections.Generic;
using System.Text;

namespace DotLog.Entity
{
	/// <summary>
	///	Generated by MyGeneration using the NHibernate Object Mapping template
	/// </summary>
	[Serializable]
	public sealed  class DotDnu
	{

		#region Private Members
		private bool _isChanged;

		private int _dnuid; 
		private string _dnuappid; 
		private string _dnuip; 
		private DateTime _dnutime; 
		private string _dnuuuid; 
		private string _dnuagent; 		
		#endregion

		#region Default ( Empty ) Class Constuctor
		/// <summary>
		/// </summary>
		public DotDnu()
		{
			_dnuid = 0; 
			_dnuappid = String.Empty; 
			_dnuip = String.Empty; 
			_dnutime = DateTime.MinValue; 
			_dnuuuid = String.Empty; 
			_dnuagent = String.Empty; 
		}
		#endregion // End of Default ( Empty ) Class Constuctor


		#region Public Properties
			
		/// <summary>
		/// 
		/// </summary>
		public int Dnuid
		{
			get { return _dnuid; }
			set
			{
				_isChanged |= ( _dnuid != value ); 
				_dnuid = value;
			}

		}
			
		/// <summary>
		/// 
		/// </summary>
		public string DnuAppId
		{
			get { return _dnuappid; }

			set	
			{	
				if(  value != null &&  value.Length > 100)
					throw new ArgumentOutOfRangeException("Invalid value for DnuAppId", value, value.ToString());
				
				_isChanged |= (_dnuappid != value); _dnuappid = value;
			}
		}
			
		/// <summary>
		/// 
		/// </summary>
		public string Dnuip
		{
			get { return _dnuip; }

			set	
			{	
				if(  value != null &&  value.Length > 100)
					throw new ArgumentOutOfRangeException("Invalid value for Dnuip", value, value.ToString());
				
				_isChanged |= (_dnuip != value); _dnuip = value;
			}
		}
			
		/// <summary>
		/// 
		/// </summary>
		public DateTime DnuTime
		{
			get { return _dnutime; }
			set
			{
				_isChanged |= ( _dnutime != value ); 
				_dnutime = value;
			}

		}
			
		/// <summary>
		/// 
		/// </summary>
		public string Dnuuuid
		{
			get { return _dnuuuid; }

			set	
			{	
				if(  value != null &&  value.Length > 100)
					throw new ArgumentOutOfRangeException("Invalid value for Dnuuuid", value, value.ToString());
				
				_isChanged |= (_dnuuuid != value); _dnuuuid = value;
			}
		}
			
		/// <summary>
		/// 
		/// </summary>
		public string DnuAgent
		{
			get { return _dnuagent; }

			set	
			{	
				if(  value != null &&  value.Length > 1073741823)
					throw new ArgumentOutOfRangeException("Invalid value for DnuAgent", value, value.ToString());
				
				_isChanged |= (_dnuagent != value); _dnuagent = value;
			}
		}
			
		/// <summary>
		/// Returns whether or not the object has changed it's values.
		/// </summary>
		public  bool IsChanged
		{
			get { return _isChanged; }
		}
				
		#endregion 
	}
}
