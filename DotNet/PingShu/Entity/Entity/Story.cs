/*
insert license info here
*/
using System;
using System.Collections;
using System.Collections.Generic;
using System.Text;

namespace PingShu.Entity
{
	/// <summary>
	///	Generated by MyGeneration using the NHibernate Object Mapping template
	/// </summary>
	[Serializable]
	public sealed  class Story
	{

		#region Private Members
		private bool _isChanged;

		private int _story_id; 
		private Book _book_id; 
		private string _story_name; 
		private string _story_path; 
		private string _story_details; 
		private int _story_listencount; 
		private int _story_sort; 		
		#endregion

		#region Default ( Empty ) Class Constuctor
		/// <summary>
		/// </summary>
		public Story()
		{
			_story_id = 0; 
			_book_id = new Book(); 
			_story_name = String.Empty; 
			_story_path = String.Empty; 
			_story_details = String.Empty; 
			_story_listencount = 0; 
			_story_sort = 0; 
		}
		#endregion // End of Default ( Empty ) Class Constuctor


		#region Public Properties
			
		/// <summary>
		/// 
		/// </summary>
		public int StoryId
		{
			get { return _story_id; }
			set
			{
				_isChanged |= ( _story_id != value ); 
				_story_id = value;
			}

		}
			
		/// <summary>
		/// 
		/// </summary>
		public Book BookId
		{
			get { return _book_id; }
			set
			{
				_isChanged |= ( _book_id != value ); 
				_book_id = value;
			}

		}
			
		/// <summary>
		/// 
		/// </summary>
		public string StoryName
		{
			get { return _story_name; }

			set	
			{	
				if(  value != null &&  value.Length > 100)
					throw new ArgumentOutOfRangeException("Invalid value for StoryName", value, value.ToString());
				
				_isChanged |= (_story_name != value); _story_name = value;
			}
		}
			
		/// <summary>
		/// 
		/// </summary>
		public string StoryPath
		{
			get { return _story_path; }

			set	
			{	
				if(  value != null &&  value.Length > 100)
					throw new ArgumentOutOfRangeException("Invalid value for StoryPath", value, value.ToString());
				
				_isChanged |= (_story_path != value); _story_path = value;
			}
		}
			
		/// <summary>
		/// 
		/// </summary>
		public string StoryDetails
		{
			get { return _story_details; }

			set	
			{	
				if(  value != null &&  value.Length > 500)
					throw new ArgumentOutOfRangeException("Invalid value for StoryDetails", value, value.ToString());
				
				_isChanged |= (_story_details != value); _story_details = value;
			}
		}
			
		/// <summary>
		/// 
		/// </summary>
		public int StoryListenCount
		{
			get { return _story_listencount; }
			set
			{
				_isChanged |= ( _story_listencount != value ); 
				_story_listencount = value;
			}

		}
			
		/// <summary>
		/// 
		/// </summary>
		public int StorySort
		{
			get { return _story_sort; }
			set
			{
				_isChanged |= ( _story_sort != value ); 
				_story_sort = value;
			}

		}
			
		/// <summary>
		/// Returns whether or not the object has changed it's values.
		/// </summary>
		public  bool IsChanged
		{
			get { return _isChanged; }
		}
				
		#endregion 
	}
}
