/*
insert license info here
*/
using System;
using System.Collections;
using System.Collections.Generic;
using System.Text;

namespace DotLog.Entity
{
	/// <summary>
	///	Generated by MyGeneration using the NHibernate Object Mapping template
	/// </summary>
	[Serializable]
	public sealed  class DotDau
	{

		#region Private Members
		private bool _isChanged;

		private int _dauid; 
		private string _dauappid; 
		private string _dauip; 
		private DateTime _dautime; 
		private string _dauuuid; 
		private string _dauagent; 		
		#endregion

		#region Default ( Empty ) Class Constuctor
		/// <summary>
		/// </summary>
		public DotDau()
		{
			_dauid = 0; 
			_dauappid = String.Empty; 
			_dauip = String.Empty; 
			_dautime = DateTime.MinValue; 
			_dauuuid = String.Empty; 
			_dauagent = String.Empty; 
		}
		#endregion // End of Default ( Empty ) Class Constuctor


		#region Public Properties
			
		/// <summary>
		/// 
		/// </summary>
		public int Dauid
		{
			get { return _dauid; }
			set
			{
				_isChanged |= ( _dauid != value ); 
				_dauid = value;
			}

		}
			
		/// <summary>
		/// 
		/// </summary>
		public string DauAppId
		{
			get { return _dauappid; }

			set	
			{	
				if(  value != null &&  value.Length > 100)
					throw new ArgumentOutOfRangeException("Invalid value for DauAppId", value, value.ToString());
				
				_isChanged |= (_dauappid != value); _dauappid = value;
			}
		}
			
		/// <summary>
		/// 
		/// </summary>
		public string Dauip
		{
			get { return _dauip; }

			set	
			{	
				if(  value != null &&  value.Length > 100)
					throw new ArgumentOutOfRangeException("Invalid value for Dauip", value, value.ToString());
				
				_isChanged |= (_dauip != value); _dauip = value;
			}
		}
			
		/// <summary>
		/// 
		/// </summary>
		public DateTime DauTime
		{
			get { return _dautime; }
			set
			{
				_isChanged |= ( _dautime != value ); 
				_dautime = value;
			}

		}
			
		/// <summary>
		/// 
		/// </summary>
		public string Dauuuid
		{
			get { return _dauuuid; }

			set	
			{	
				if(  value != null &&  value.Length > 100)
					throw new ArgumentOutOfRangeException("Invalid value for Dauuuid", value, value.ToString());
				
				_isChanged |= (_dauuuid != value); _dauuuid = value;
			}
		}
			
		/// <summary>
		/// 
		/// </summary>
		public string DauAgent
		{
			get { return _dauagent; }

			set	
			{	
				if(  value != null &&  value.Length > 1073741823)
					throw new ArgumentOutOfRangeException("Invalid value for DauAgent", value, value.ToString());
				
				_isChanged |= (_dauagent != value); _dauagent = value;
			}
		}
			
		/// <summary>
		/// Returns whether or not the object has changed it's values.
		/// </summary>
		public  bool IsChanged
		{
			get { return _isChanged; }
		}
				
		#endregion 
	}
}
